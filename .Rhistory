optimize(function(x) abs(ppois(x, lambda = .25) - (.99)),interval = c(0:6))
optimize(function(x) abs(ppois(x, lambda = .25) - (.99)),interval = c(0:6))
optimize(function(x) abs(ppois(x, lambda = .25) - (.99)),interval = c(0:6))
optimize(function(x) abs(ppois(x, lambda = .25) - (.99)),interval = c(0:6))
optimize(function(x) abs(ppois(x, lambda = .25) - (.99)),interval = c(0:6))
optimize(function(x) abs(ppois(x, lambda = .25) - (.99)),interval = c(0:6))
1-(0.9 * sum(sapply(1:100, function(i) .9 * dnbinom(i, 2, 2/3) * pgamma(10650/1.05, i, 1/10000) + .1 * dnbinom(i, 2, 2/3) * pgamma(10650/1.20, i, 1/10000))))
(0.9 * sum(sapply(1:100, function(i) .9 * dnbinom(i, 2, 2/3) * pgamma(10650/1.05, i, 1/10000) + .1 * dnbinom(i, 2, 2/3) * pgamma(10650/1.20, i, 1/10000))))
(0.9 * sum(sapply(0:100, function(i) .9 * dnbinom(i, 2, 2/3) * pgamma(10650/1.05, i, 1/10000) + .1 * dnbinom(i, 2, 2/3) * pgamma(10650/1.20, i, 1/10000))))
1-(0.9 * sum(sapply(0:100, function(i) .9 * dnbinom(i, 2, 2/3) * pgamma(10650/1.05, i, 1/10000) + .1 * dnbinom(i, 2, 2/3) * pgamma(10650/1.20, i, 1/10000))))
repart <- function(x) (0.9 * sum(sapply(0:100, function(i) .9 * dnbinom(i, 2, 2/3) * pgamma(x, i, 1/10000) + .1 * dnbinom(i, 2, 2/3) * pgamma(x, i, 1/10000))))
sum(sapply(1:100, function(x) repart(x)))
(sapply(1:100, function(x) repart(x)))
repart(100000)
repart(1e110)
repart(1e200)
repart(1e5000)
repart(1e5000000000)
repart <- function(x) (0.9 * (4/9 + sum(sapply(0:100, function(i) .9 * dnbinom(i, 2, 2/3) * pgamma(x, i, 1/10000)))) + .1 * (4/9 + sum(sapply(0:100, function(i) dnbinom(i, 2, 2/3) * pgamma(x, i, 1/10000))))))
repart <- function(x) (0.9 * (4/9 + sum(sapply(0:100, function(i) .9 * dnbinom(i, 2, 2/3) * pgamma(x, i, 1/10000)))) + .1 * (4/9 + sum(sapply(0:100, function(i) dnbinom(i, 2, 2/3) * pgamma(x, i, 1/10000)))))
repart(1)
repart(10)
repart(10000)
repart(100)
repart(1000)
repart(10000)
repart <- function(x) 4/9 + (0.9 * sum(sapply(0:100, function(i) .9 * dnbinom(i, 2, 2/3) * pgamma(x, i, 1/10000))) + .1 * sum(sapply(0:100, function(i) dnbinom(i, 2, 2/3) * pgamma(x, i, 1/10000))))
repart(100)
repart(1e4)
repart(10650)
dnbinom(0, 2, 2/3)
1/9
4/9
0.0001
Fy <- function(x)
{
k <- 1:100
dnbinom(0, 2, 2/3) + sum(dnbinom(k, 2, 2/3) * pgamma(x, k, 0.0001))
}
Fx <- function(x)
{
0.9 * Fy(x/1.05) + 0.1 * Fy(x/1.2)
}
1 - Fx(10650)
#quantile
optimize(function(x) abs(repartpois(x) - (.99)),interval = c(0:5))$minimum
shiny::runApp('Dropbox/ActuLab/Coop/UserInputs')
runApp('Dropbox/ActuLab/Coop/UserInputs')
runApp('Dropbox/ActuLab/Coop/UserInputs')
a <- c(2.46, 0.84, 1.45)
0.04 + a*0.08
shiny::runApp('Dropbox/ActuLab/Coop/UserInputs')
runApp('Dropbox/ActuLab/Coop/UserInputs')
totalhits <- function(URL, noms = URL){
table_results <- matrix(nrow = length(URL), ncol = 3)
colnames(table_results) <- c("Nb. total", "Nb. coop", "ratio")
no.hits.total <- list()
no.hits.coop <- list()
ratio <- list()
for(i in seq_along(URL)){
no.hits.total[[i]] <- GoogleHits(URL[i])
no.hits.coop[[i]] <- GoogleHits(URL[i], "cooperative+OR+OR+OR+coop+OR+OR+OR+co-operative")
ratio[[i]] <- no.hits.coop[[i]]/no.hits.total[[i]]
if(is.na(no.hits.total[[i]]))
no.hits.total[[i]] <- 0
if(is.na(no.hits.coop[[i]]))
{
no.hits.coop[[i]] <- 0
ratio[[i]] <- 0
}
table_results[i, 1:3] <- c(no.hits.total[[i]], no.hits.coop[[i]], ratio[[i]])
}
table_results
}
totalhits("promutuel.ca")
## Alec James van Rassel, Ian Shaink, Nicolas Gagnon
## Actulab 2019: Problématique Cooperators
### Mise en oeuvre d'algorithme de web scrapping pour déterminer des probabilités sur si des compagnies sont des coopéartives
### importation des packages
library(tidyverse)
library(rvest)
library(XML)
library(RCurl)
library(googleway)
# importer les données obtenues manuellement et utilisées pour le GLM
donnees_manuel <- read.csv("data_final_glm.csv")
# clé pour le API de Google Maps
apikey <- "AIzaSyCbVJZSJnFGdXJGrXev19WWvDKdomjzclM"
## La fonction "scrape" effectue une recherche Google pour les URLs correspondant au texte entré en argument
##
## Argument
## NAME: argument de type character entré par l'utilisateur; devrait être le nom de la compagnie
##
## Packages
## Rvest: package pour utiliser l'API de Google Maps
##
## Le resultat est une liste des 10 URLs sur la première page de Google trouvés
## Nous selectons uniquement le premier résultat plus tard dans la fonction runall
##
scrape <- function(NAME){
# chercher les liens
links <- read_html(URLencode(paste0("https://www.google.com/search?q=", NAME))) %>%
html_nodes(".r a") %>%
html_attr("href")
# nettoyer les liens
links = gsub('/url\\?q=','',sapply(strsplit(links[as.vector(grep('url',links))],split='&'),'[',1))
}
## La fonction "site_gmaps" effectue une recherche sur l'API de Google Maps pour trouver l'URL du site web d'une compagnie rentrée en argument
##
## Argument
## NOM: argument de type character entré par l'utilisateur; devrait être le nom de la compagnie
##
## Packages
## Googleway: package pour utiliser l'API de Google Maps
##
## Le resultat est soit l'URL de la compagnie s'il est trouvé ou rien sinon
##
site_gmaps <- function(NOM)
{
require(googleway)
myPlace <- google_places(search_string = NOM, key = apikey)
if(length(myPlace$results) != 0){
myPlaceId <- myPlace$results[1, ]$place_id
google_place_details(place_id = myPlaceId, key = apikey)$result$website
}
}
## La fonction "GoogleHits" effectue une recherche Google pour compter le nombre de résultats pour une recherche google raffiné à un site "input" et optionellement avec des mots clés "twoput"
##
## Argument
## input: URL pour le site de la compagnie à chercher
## twoput: mots clés, vide par défaut
##
## Packages
## XLM et Rcurl: pour interpreter les URLs et les résultats google
##
## Le resultat est le nombre de pages de la recherche
##
GoogleHits <- function(input, twoput = ""){
require(XML)
require(RCurl)
url <- paste("https://www.google.com/search?q=site:",
gsub(pattern = " ", replacement = "", x = input),
paste("%20", twoput, sep = ""), sep = "") # on colle ensemble la recherche google nécessaire, ainsi que les mots clés s'il y a lieu
CAINFO = paste(system.file(package="RCurl"), "/CurlSSL/ca-bundle.crt", sep = "")
script <- getURL(url, followlocation = TRUE, cainfo = CAINFO, ssl.verifypeer = F)
doc <- htmlParse(script)
res <- xpathSApply(doc, '//*/div[@id="resultStats"]', xmlValue)
return(as.integer(gsub("[^0-9]", "", res))) # on retourne uniquement le nombre
}
##
## La fonction "totalhits" utilise la fonction "GoogleHits" pour récursivement compter le nombre de résultats pour le site en entier et pour des mots clés en plus du ratio du nombre de pages avec un groupe de mots clés pour COOP
##
## Argument
## URL: lien au site web de la compagnie
## noms: nom de la compagnie, URL par défaut
##
## Le resultat est le nombre de pages de la recherche
##
totalhits <- function(URL, noms = URL){
table_results <- matrix(nrow = length(URL), ncol = 3)
colnames(table_results) <- c("Nb. total", "Nb. coop", "ratio")
no.hits.total <- list()
no.hits.coop <- list()
ratio <- list()
for(i in seq_along(URL)){
no.hits.total[[i]] <- GoogleHits(URL[i])
no.hits.coop[[i]] <- GoogleHits(URL[i], "cooperative+OR+OR+OR+coop+OR+OR+OR+co-operative")
ratio[[i]] <- no.hits.coop[[i]]/no.hits.total[[i]]
if(is.na(no.hits.total[[i]]))
no.hits.total[[i]] <- 0
if(is.na(no.hits.coop[[i]]))
{
no.hits.coop[[i]] <- 0
ratio[[i]] <- 0
}
table_results[i, 1:3] <- c(no.hits.total[[i]], no.hits.coop[[i]], ratio[[i]])
}
table_results
}
totalhits("promutuel.ca")
shiny::runApp('Dropbox/ActuLab/Coop/UserInputs')
runApp('Dropbox/ActuLab/Coop/UserInputs')
505 + c(1, -1)*qt(p = 0.05, df = 19) * 55/sqrt(20)
495 + c(1, -1)*qt(p = 0.05, df = 19) * 70/sqrt(20)
qnorm(.01)
qnorm(.05)
.78+c(1, -1)*1.645*sqrt((.78 * .22)/1030)
qnorm(.025)
qnorm(.05)
qnorm(.025)
qnorm(.01)
qnorm(.005)
qnorm(.025)
qnorm(.05)
qnorm(.025)
runApp('Dropbox/ActuLab/Coop/UserInputs')
shiny::runApp('Dropbox/ActuLab/Coop/UserInputs')
runApp('Dropbox/ActuLab/Coop/UserInputs')
runApp('Dropbox/ActuLab/Coop/UserInputs')
runApp('Dropbox/ActuLab/Coop/UserInputs')
runApp('Dropbox/ActuLab/Coop/UserInputs')
runApp('Dropbox/ActuLab/Coop/UserInputs')
library(rsconnect)
install.packages(shinydashboardPlus)
install.packages("shinydashboardPlus")
install.packages("shinydashboard")
# Library
{
library(shiny)
library(actuar)
library(shinydashboard)
library(shinydashboardPlus)
library(ggplot2)
library(rsconnect)
}
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
radioButtons_withHTML <- function (inputId, label, choices, selected = NULL, inline = FALSE,
width = NULL)
{
choices <- shiny:::choicesWithNames(choices)
selected <- if (is.null(selected))
choices[[1]]
else {
shiny:::validateSelected(selected, choices, inputId)
}
if (length(selected) > 1)
stop("The 'selected' argument must be of length 1")
options <- generateOptions_withHTML(inputId, choices, selected, inline,
type = "radio")
divClass <- "form-group shiny-input-radiogroup shiny-input-container"
if (inline)
divClass <- paste(divClass, "shiny-input-container-inline")
tags$div(id = inputId, style = if (!is.null(width))
paste0("width: ", validateCssUnit(width), ";"), class = divClass,
shiny:::controlLabel(inputId, label), options)
}
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
output$plotNORM <- renderPlot(expr = densityNORM())
runApp('OneDrive - Université Laval/distributacalcul')
output$plotNORM <- renderPlot(densityNORM(), )
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
ecdf(distrNORM())
Fn <- ecdf(distrNORM)
ecdf(distrNORM())
ecdf(distrNORM)
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
shiny::runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
shiny::runApp('OneDrive - Université Laval/distributacalcul')
install.packages(plotly)
install.packages("plotly")
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
runApp('OneDrive - Université Laval/distributacalcul')
